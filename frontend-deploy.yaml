apiVersion: apps/v1
kind: Deployment
metadata:
 name: frontend
 namespace: project-k8
 labels:
  env: dev
  name: project-k8
spec:
 replicas: 3
 selector:
  matchLabels:
   project: k8
   env: dev 
   tier: frontend
 template:
  metadata:
   name: project-k8
   labels:
     project: k8
     env: dev
     tier: frontend
  spec:
   #imagePullSecrets:  #for practice used MINIKube so to pull images from our Private ECR we create a ecr-secret and passing from here to enable minikube to pull image
   #- name: ecr-secret 
   containers:
   - name: frontend
     image: 589820790160.dkr.ecr.us-east-1.amazonaws.com/frontend:v1
     resources:
          requests:
            cpu: 100m
          limits:
            cpu: 500m
     livenessProbe:
        httpGet:
         port: 80
        initialDelaySeconds: 5
        periodSeconds: 10
     readinessProbe:
        httpGet:
         port: 80
        initialDelaySeconds: 5
        periodSeconds: 10
     ports:
     - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
 name: frontend-svc
 namespace: project-k8
spec:
 type: NodePort
 selector:
   project: k8
   env: dev
   tier: frontend
 ports:
 - port: 80
   targetPort: 80
   
  
---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: project-k8
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 20
