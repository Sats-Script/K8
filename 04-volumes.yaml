# EBS : elastic block storage 
# EFS : elastic file  storage

#we keep data outside of cluster as Volumes , we dont maintain Databases in kubernetes environment

#static provisioning : we should do it
#dynamic : AWS vl look after it .

# 1. create volumes , 2. drivers for communicating b/w EBS and EKS , 3. EKs must have permisiions to access these volumes 

# EBS-csi drivers
#kubectl get pv

#Retain policy 

apiVersion: v1            #creating PVolume in k8 cluster environment
kind: PersistentVolume
metadata:                                                  #vol id : vol-04925d639e864b6fc
  name: ebs-static
spec:
 accessModes:
  - ReadWriteOnce
 capacity:
   storage: 20Gi     # equalent to the how much the disk or volume is there in AWS ex: 20Gi
 csi:
   driver: ebs.csi.aws.com
   fsType: ext4            #disktypes file system , related to storage
   volumeHandle: vol-04925d639e864b6fc              #volumeid in aws
---

apiVersion: v1                    #pods has to claim PV
kind: PersistentVolumeClaim
metadata:
  name: ebs-static

spec:
  storageClassName: ""    # Should be empty in static provisioning
  volumeName: ebs-static           #PV name
  accessModes:
    - ReadWriteOnce
  resources:
   requests:
    storage: 5Gi             #same as or below PV storage

#kubectl get pvc  - status should be bound means pvc attached to pv or claim is successful
#kubectl describe pv   / pvc
---

apiVersion: v1
kind: pod
metadata: 
  name: ebs-static
spec:
  # nodeselector:
  #   topology.kubernetes.io/zone: us-east-1c
  containers:
  - name: nginx
    image: nginx
    volumeMounts:
    - name: ebs-static
      mountPath: /usr/share/nginx/html
  volumes:
  - name: ebs-static
    persistantVolumeClaim: 
      claimName: ebs-static


 #kubectl get pod -o wide
#kubectl get nodes --show-labels

